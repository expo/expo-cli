import axios from 'axios';
import fs from 'fs-extra';
import { compile } from 'json-schema-to-typescript';
import path from 'path';
import semver from 'semver';

let version = process.argv[2];

if (!version) {
  const packageJSON = require('../package.json');
  // @ts-ignore
  version = semver.parse(packageJSON.version).major;
  console.log('Using package version: ' + version);
}
let parsedVersion = version;
if (parsedVersion !== 'unversioned') {
  parsedVersion += '.0.0';
} else {
  parsedVersion = parsedVersion.toUpperCase();
}

(async () => {
  const {
    data: { data },
  } = await axios.get(`http://exp.host/--/api/v2/project/configuration/schema/${parsedVersion}`);

  const ts = await compile(data.schema as any, 'ExpoConfig', {
    bannerComment: `/* tslint:disable */\n/**\n* This file was automatically generated by json-schema-to-typescript.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file in expo/universe,\n* and run yarn generate ${version} to regenerate this file.\n*/`,
    unknownAny: false,
  });
  const filepath = `src/index.ts`;
  fs.ensureDirSync(path.dirname(filepath));
  await fs.writeFile(filepath, ts, 'utf8');
})();
