{"version":3,"file":"getMode.js","sourceRoot":"","sources":["../../src/utils/getMode.ts"],"names":[],"mappings":";;AAEA;;GAEG;AAEH,SAAS,OAAO,CAAC,EACf,UAAU,EACV,WAAW,EACX,IAAI,GAKL;IACC,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACrE,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAU,CAAC;SACnD;KACF;SAAM,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAI,CAAC,WAAW,EAAU,CAAC;KACnC;SAAM,IAAI,UAAU,EAAE;QACrB,OAAO,YAAY,CAAC;KACrB;SAAM,IAAI,WAAW,EAAE;QACtB,OAAO,aAAa,CAAC;KACtB;IAED,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,SAAS,WAAW,CAAC,SAAkB;IACrC,IAAI,IAAI,CAAC;IACT,IAAI,SAAS,IAAI,SAAS,CAAC,WAAW,EAAE;QACtC,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;IACD,OAAO,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,aAAa,CAAC;AACzD,CAAC;AAED,kBAAe,OAAO,CAAC","sourcesContent":["import { Mode } from '../types';\n\n/**\n * mode -> production -> development -> process.env.NODE_ENV -> 'development'\n */\n\nfunction getMode({\n  production,\n  development,\n  mode,\n}: {\n  production?: boolean;\n  development?: boolean;\n  mode?: Mode;\n}): Mode {\n  if (mode === undefined) {\n    if (process.env.NODE_ENV != null && isValidMode(process.env.NODE_ENV)) {\n      return process.env.NODE_ENV.toLowerCase() as Mode;\n    }\n  } else if (isValidMode(mode)) {\n    return mode.toLowerCase() as Mode;\n  } else if (production) {\n    return 'production';\n  } else if (development) {\n    return 'development';\n  }\n\n  return 'development';\n}\n\nfunction isValidMode(inputMode?: string): boolean {\n  let mode;\n  if (inputMode && inputMode.toLowerCase) {\n    mode = inputMode.toLowerCase();\n  }\n  return mode === 'production' || mode === 'development';\n}\n\nexport default getMode;\n"]}