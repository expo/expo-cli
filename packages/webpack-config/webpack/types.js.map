{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Configuration as WebpackConfiguration } from 'webpack';\nimport {\n  Configuration as WebpackDevServerConfiguration,\n  ProxyConfigMap,\n  ProxyConfigArray,\n} from 'webpack-dev-server';\n\nexport interface DevConfiguration extends WebpackConfiguration {\n  devServer?: WebpackDevServerConfiguration;\n}\n\nexport interface Environment {\n  https: boolean;\n  config: { [key: string]: any };\n  locations?: FilePaths;\n  projectRoot: string;\n  production?: boolean;\n  development?: boolean;\n  polyfill?: boolean;\n  mode?: Mode;\n  platform: 'ios' | 'android' | 'web';\n  removeUnusedImportExports?: boolean;\n  pwa?: boolean;\n  report?: {\n    verbose: boolean;\n    path: string;\n    statsFilename: string;\n    reportFilename: string;\n  };\n}\n\ntype PathResolver = (...input: string[]) => string;\n\nexport interface FilePathsFolder {\n  get: PathResolver;\n  folder: string;\n  indexHtml: string;\n  manifest: string;\n  serveJson: string;\n  favicon: string;\n}\nexport interface FilePaths {\n  absolute: PathResolver;\n  includeModule: PathResolver;\n  template: FilePathsFolder;\n  production: FilePathsFolder;\n  packageJson: string;\n  root: string;\n  appMain: string;\n  modules: string;\n  servedPath: string;\n  //   [route: string]: string | PathResolver | FilePathsFolder;\n}\n\nexport type Mode = 'production' | 'development' | 'none';\n\nexport interface Arguments {\n  allowedHost?: string;\n  proxy?: ProxyConfigMap | ProxyConfigArray;\n  [key: string]: any;\n}\n"]}