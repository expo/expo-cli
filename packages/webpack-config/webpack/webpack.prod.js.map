{"version":3,"file":"webpack.prod.js","sourceRoot":"","sources":["../src/webpack.prod.ts"],"names":[],"mappings":"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","sourcesContent":["import TerserPlugin from 'terser-webpack-plugin';\nimport isWsl from 'is-wsl';\nimport OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';\n// @ts-ignore\nimport merge from 'webpack-merge';\n// @ts-ignore\nimport safePostCssParser from 'postcss-safe-parser';\nimport webpack from 'webpack';\nimport { boolish } from 'getenv';\nimport getConfigAsync from './utils/getConfigAsync';\nimport getPathsAsync from './utils/getPathsAsync';\nimport common from './webpack.common';\nimport { Environment, Arguments } from './types';\n\nexport default async function(env: Environment, argv: Arguments): Promise<webpack.Configuration> {\n  if (!env.config) {\n    // Fill all config values with PWA defaults\n    env.config = await getConfigAsync(env);\n  }\n\n  const locations = await getPathsAsync(env);\n\n  const commonConfig = await common(env, argv);\n\n  const shouldUseSourceMap = commonConfig.devtool !== null;\n\n  const isDebugMode = boolish('EXPO_WEB_DEBUG', false);\n\n  return merge(commonConfig, {\n    output: {\n      path: locations.production.folder,\n      filename: 'static/js/[name].[contenthash:8].js',\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: 'static/js/[name].[contenthash:8].chunk.js',\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: (info: webpack.DevtoolModuleFilenameTemplateInfo): string =>\n        locations.absolute(info.absoluteResourcePath).replace(/\\\\/g, '/'),\n    },\n    optimization: {\n      minimize: true,\n      minimizer: [\n        // This is only used in production mode\n        new TerserPlugin({\n          terserOptions: {\n            parse: {\n              // we want terser to parse ecma 8 code. However, we don't want it\n              // to apply any minfication steps that turns valid ecma 5 code\n              // into invalid ecma 5 code. This is why the 'compress' and 'output'\n              // sections only apply transformations that are ecma 5 safe\n              // https://github.com/facebook/create-react-app/pull/4234\n              ecma: 8,\n            },\n            compress: {\n              warnings: isDebugMode,\n              // Disabled because of an issue with Uglify breaking seemingly valid code:\n              // https://github.com/facebook/create-react-app/issues/2376\n              // Pending further investigation:\n              // https://github.com/mishoo/UglifyJS2/issues/2011\n              comparisons: false,\n              // Disabled because of an issue with Terser breaking valid code:\n              // https://github.com/facebook/create-react-app/issues/5250\n              // Pending futher investigation:\n              // https://github.com/terser-js/terser/issues/120\n              inline: 2,\n            },\n            mangle: isDebugMode\n              ? false\n              : {\n                  safari10: true,\n                },\n            output: {\n              ecma: 5,\n              comments: isDebugMode,\n              // Turned on because emoji and regex is not minified properly using default\n              // https://github.com/facebook/create-react-app/issues/2488\n              ascii_only: true,\n            },\n          },\n          // Use multi-process parallel running to improve the build speed\n          // Default number of concurrent runs: os.cpus().length - 1\n          // Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\n          // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n          parallel: !isWsl,\n          // Enable file caching\n          cache: true,\n          sourceMap: shouldUseSourceMap,\n        }),\n        // This is only used in production mode\n        new OptimizeCSSAssetsPlugin({\n          cssProcessorOptions: {\n            parser: safePostCssParser,\n            map: shouldUseSourceMap\n              ? {\n                  // `inline: false` forces the sourcemap to be output into a\n                  // separate file\n                  inline: false,\n                  // `annotation: true` appends the sourceMappingURL to the end of\n                  // the css file, helping the browser find the sourcemap\n                  annotation: true,\n                }\n              : false,\n          },\n        }),\n      ],\n      // Automatically split vendor and commons\n      // https://twitter.com/wSokra/status/969633336732905474\n      // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n      splitChunks: {\n        chunks: 'all',\n        name: false,\n      },\n      // Keep the runtime chunk separated to enable long term caching\n      // https://twitter.com/wSokra/status/969679223278505985\n      runtimeChunk: true,\n\n      // Skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted.\n      noEmitOnErrors: true,\n    },\n  });\n}\n"]}