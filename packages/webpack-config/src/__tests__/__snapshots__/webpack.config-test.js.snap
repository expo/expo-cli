// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`web web development 1`] = `
Object {
  "bail": false,
  "cache": Object {
    "buildDependencies": Object {
      "config": Array [
        "packages/webpack-config/src/webpack.config.ts",
      ],
      "defaultWebpack": Array [
        "node_modules/webpack/lib/",
      ],
      "tsconfig": Array [],
    },
    "cacheDirectory": "packages/webpack-config/e2e/basic/node_modules/.cache/web",
    "store": "pack",
    "type": "filesystem",
  },
  "context": "packages/webpack-config/e2e/basic",
  "devServer": Object {
    "allowedHosts": Array [
      "all",
    ],
    "client": Object {
      "overlay": false,
      "webSocketURL": Object {
        "hostname": undefined,
        "pathname": "/_expo/ws",
        "port": undefined,
      },
    },
    "compress": true,
    "devMiddleware": Object {
      "index": true,
      "publicPath": "",
    },
    "historyApiFallback": Object {
      "disableDotRule": true,
      "index": "/",
    },
    "host": "0.0.0.0",
    "https": false,
    "proxy": undefined,
    "setupMiddlewares": [Function],
    "static": Object {
      "directory": "packages/webpack-config/web-default",
      "publicPath": Array [
        "/",
      ],
      "watch": Object {
        "ignored": /\\^\\(\\?!\\\\/Users\\\\/evanbacon\\\\/Documents\\\\/GitHub\\\\/cli\\\\/packages\\\\/webpack\\\\x2dconfig\\\\/e2e\\\\/basic\\\\/\\)\\.\\+\\\\/node_modules\\\\//g,
      },
    },
    "webSocketServer": Object {
      "options": Object {
        "host": undefined,
        "path": "/_expo/ws",
        "port": undefined,
      },
      "type": "ws",
    },
  },
  "devtool": "cheap-module-source-map",
  "entry": Array [
    "packages/webpack-config/e2e/basic/node_modules/resize-observer-polyfill/dist/ResizeObserver.global.js",
    "packages/webpack-config/e2e/basic/index.js",
  ],
  "infrastructureLogging": Object {
    "debug": true,
    "level": "verbose",
  },
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "enforce": "pre",
        "exclude": /@babel\\(\\?:\\\\/\\|\\\\\\\\\\{1,2\\}\\)runtime/,
        "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\|css\\)\\$/,
        "use": "node_modules/source-map-loader/dist/cjs.js",
      },
      Object {
        "oneOf": Array [
          Object {
            "mimetype": "image/avif",
            "parser": Object {
              "dataUrlCondition": Object {
                "maxSize": 1000,
              },
            },
            "test": Array [
              /\\\\\\.avif\\$/,
            ],
            "type": "asset",
          },
          Object {
            "parser": Object {
              "dataUrlCondition": Object {
                "maxSize": 1000,
              },
            },
            "test": Array [
              /\\\\\\.bmp\\$/,
              /\\\\\\.gif\\$/,
              /\\\\\\.jpe\\?g\\$/,
              /\\\\\\.png\\$/,
              /\\\\\\.svg\\$/,
            ],
            "type": "asset",
          },
          Object {
            "include": [Function],
            "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
            "use": Object {
              "loader": "node_modules/babel-loader/lib/index.js",
              "options": Object {
                "babelrc": false,
                "cacheCompression": false,
                "cacheDirectory": "packages/webpack-config/e2e/basic/.expo/web/cache/development/babel-loader",
                "cacheIdentifier": "custom-value-to-skip-babel-config-error",
                "caller": Object {
                  "__dangerous_rule_id": "expo-babel-loader",
                  "bundler": "webpack",
                  "mode": "development",
                  "platform": "web",
                },
                "compact": false,
                "configFile": true,
                "inputSourceMap": true,
                "root": "packages/webpack-config/e2e/basic",
                "sourceMaps": true,
                "sourceType": "unambiguous",
              },
            },
          },
          Object {
            "sideEffects": true,
            "test": /\\\\\\.\\(css\\)\\$/,
            "use": Array [
              "node_modules/style-loader/dist/cjs.js",
              Object {
                "loader": "node_modules/css-loader/dist/cjs.js",
                "options": Object {
                  "importLoaders": 1,
                  "modules": Object {
                    "mode": "icss",
                  },
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "exclude": Array [
              /\\^\\$/,
              /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
              /\\\\\\.html\\$/,
              /\\\\\\.json\\$/,
            ],
            "type": "asset/resource",
          },
        ],
      },
    ],
    "strictExportPresence": false,
  },
  "name": "web",
  "output": Object {
    "assetModuleFilename": "static/media/[name].[hash][ext]",
    "chunkFilename": "static/js/[name].chunk.js",
    "devtoolModuleFilenameTemplate": [Function],
    "filename": "static/js/bundle.js",
    "path": "packages/webpack-config/e2e/basic/web-build",
    "pathinfo": true,
    "publicPath": "/",
    "uniqueName": "web",
  },
  "plugins": Array [
    "HtmlWebpackPlugin",
    "InterpolateHtmlPlugin",
    "FaviconWebpackPlugin",
    "ModuleNotFoundPlugin",
    "DefinePlugin",
    "WebpackManifestPlugin",
    "ExpectedErrorsPlugin",
  ],
  "resolve": Object {
    "alias": Object {
      "react-native$": "react-native-web",
      "react-native/Libraries/Components/View/ViewStylePropTypes$": "react-native-web/dist/exports/View/ViewStylePropTypes",
      "react-native/Libraries/EventEmitter/NativeEventEmitter$": "react-native-web/dist/vendor/react-native/NativeEventEmitter",
      "react-native/Libraries/EventEmitter/RCTDeviceEventEmitter$": "react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter",
      "react-native/Libraries/vendor/emitter/EventEmitter$": "react-native-web/dist/vendor/react-native/emitter/EventEmitter",
      "react-native/Libraries/vendor/emitter/EventSubscriptionVendor$": "react-native-web/dist/vendor/react-native/emitter/EventSubscriptionVendor",
    },
    "aliasFields": Array [
      "browser",
      "module",
      "main",
    ],
    "extensions": Array [
      ".web.ts",
      ".web.tsx",
      ".web.mjs",
      ".web.js",
      ".web.jsx",
      ".ts",
      ".tsx",
      ".mjs",
      ".js",
      ".jsx",
      ".json",
      ".wasm",
    ],
    "mainFields": Array [
      "browser",
      "module",
      "main",
    ],
    "symlinks": false,
  },
  "stats": "detailed",
  "target": Array [
    "web",
  ],
  "watchOptions": Object {
    "aggregateTimeout": 5,
    "ignored": Array [
      "**/.git/**",
      "**/node_modules/**",
      "**/.expo/**",
      "**/.expo-shared/**",
      "**/web-build/**",
      "**/.#*",
    ],
  },
}
`;

exports[`web web production 1`] = `
Object {
  "bail": true,
  "cache": Object {
    "buildDependencies": Object {
      "config": Array [
        "packages/webpack-config/src/webpack.config.ts",
      ],
      "defaultWebpack": Array [
        "node_modules/webpack/lib/",
      ],
      "tsconfig": Array [],
    },
    "cacheDirectory": "packages/webpack-config/e2e/basic/node_modules/.cache/web",
    "store": "pack",
    "type": "filesystem",
  },
  "context": "packages/webpack-config/e2e/basic",
  "devtool": "source-map",
  "entry": Array [
    "packages/webpack-config/e2e/basic/node_modules/resize-observer-polyfill/dist/ResizeObserver.global.js",
    "packages/webpack-config/e2e/basic/index.js",
  ],
  "infrastructureLogging": Object {
    "debug": true,
    "level": "verbose",
  },
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "enforce": "pre",
        "exclude": /@babel\\(\\?:\\\\/\\|\\\\\\\\\\{1,2\\}\\)runtime/,
        "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\|css\\)\\$/,
        "use": "node_modules/source-map-loader/dist/cjs.js",
      },
      Object {
        "oneOf": Array [
          Object {
            "mimetype": "image/avif",
            "parser": Object {
              "dataUrlCondition": Object {
                "maxSize": 1000,
              },
            },
            "test": Array [
              /\\\\\\.avif\\$/,
            ],
            "type": "asset",
          },
          Object {
            "parser": Object {
              "dataUrlCondition": Object {
                "maxSize": 1000,
              },
            },
            "test": Array [
              /\\\\\\.bmp\\$/,
              /\\\\\\.gif\\$/,
              /\\\\\\.jpe\\?g\\$/,
              /\\\\\\.png\\$/,
              /\\\\\\.svg\\$/,
            ],
            "type": "asset",
          },
          Object {
            "include": [Function],
            "test": /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
            "use": Object {
              "loader": "node_modules/babel-loader/lib/index.js",
              "options": Object {
                "babelrc": false,
                "cacheCompression": false,
                "cacheDirectory": "packages/webpack-config/e2e/basic/.expo/web/cache/production/babel-loader",
                "cacheIdentifier": "custom-value-to-skip-babel-config-error",
                "caller": Object {
                  "__dangerous_rule_id": "expo-babel-loader",
                  "bundler": "webpack",
                  "mode": "production",
                  "platform": "web",
                },
                "compact": true,
                "configFile": true,
                "inputSourceMap": true,
                "root": "packages/webpack-config/e2e/basic",
                "sourceMaps": true,
                "sourceType": "unambiguous",
              },
            },
          },
          Object {
            "sideEffects": true,
            "test": /\\\\\\.\\(css\\)\\$/,
            "use": Array [
              Object {
                "loader": "node_modules/mini-css-extract-plugin/dist/loader.js",
                "options": Object {},
              },
              Object {
                "loader": "node_modules/css-loader/dist/cjs.js",
                "options": Object {
                  "importLoaders": 1,
                  "modules": Object {
                    "mode": "icss",
                  },
                  "sourceMap": true,
                },
              },
            ],
          },
          Object {
            "exclude": Array [
              /\\^\\$/,
              /\\\\\\.\\(js\\|mjs\\|jsx\\|ts\\|tsx\\)\\$/,
              /\\\\\\.html\\$/,
              /\\\\\\.json\\$/,
            ],
            "type": "asset/resource",
          },
        ],
      },
    ],
    "strictExportPresence": false,
  },
  "name": "web",
  "optimization": Object {
    "emitOnErrors": false,
    "minimize": true,
    "minimizer": Array [
      Object {
        "options": Object {
          "exclude": undefined,
          "extractComments": true,
          "include": undefined,
          "minimizer": Object {
            "implementation": [Function],
            "options": Object {
              "compress": Object {
                "comparisons": false,
                "ecma": 5,
                "inline": 2,
                "warnings": false,
              },
              "keep_classnames": false,
              "keep_fnames": false,
              "mangle": Object {
                "safari10": true,
              },
              "output": Object {
                "ascii_only": true,
                "comments": false,
                "ecma": 5,
              },
              "parse": Object {
                "ecma": 2018,
              },
            },
          },
          "parallel": true,
          "test": /\\\\\\.\\[cm\\]\\?js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
        },
      },
      Object {
        "options": Object {
          "exclude": undefined,
          "include": undefined,
          "minimizer": Object {
            "implementation": [Function],
            "options": Object {},
          },
          "parallel": true,
          "test": /\\\\\\.css\\(\\\\\\?\\.\\*\\)\\?\\$/i,
          "warningsFilter": [Function],
        },
      },
    ],
    "nodeEnv": false,
    "splitChunks": Object {
      "chunks": "all",
    },
    "usedExports": false,
  },
  "output": Object {
    "assetModuleFilename": "static/media/[name].[hash][ext]",
    "chunkFilename": "static/js/[name].[contenthash:8].chunk.js",
    "devtoolModuleFilenameTemplate": [Function],
    "filename": "static/js/[name].[contenthash:8].js",
    "path": "packages/webpack-config/e2e/basic/web-build",
    "publicPath": "/",
    "uniqueName": "web",
  },
  "plugins": Array [
    "CleanWebpackPlugin",
    "CopyPlugin",
    "HtmlWebpackPlugin",
    "InterpolateHtmlPlugin",
    "FaviconWebpackPlugin",
    "ApplePwaWebpackPlugin",
    "ChromeIconsWebpackPlugin",
    "ModuleNotFoundPlugin",
    "DefinePlugin",
    "MiniCssExtractPlugin",
    "WebpackManifestPlugin",
    "ExpectedErrorsPlugin",
  ],
  "resolve": Object {
    "alias": Object {
      "react-native$": "react-native-web",
      "react-native/Libraries/Components/View/ViewStylePropTypes$": "react-native-web/dist/exports/View/ViewStylePropTypes",
      "react-native/Libraries/EventEmitter/NativeEventEmitter$": "react-native-web/dist/vendor/react-native/NativeEventEmitter",
      "react-native/Libraries/EventEmitter/RCTDeviceEventEmitter$": "react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter",
      "react-native/Libraries/vendor/emitter/EventEmitter$": "react-native-web/dist/vendor/react-native/emitter/EventEmitter",
      "react-native/Libraries/vendor/emitter/EventSubscriptionVendor$": "react-native-web/dist/vendor/react-native/emitter/EventSubscriptionVendor",
    },
    "aliasFields": Array [
      "browser",
      "module",
      "main",
    ],
    "extensions": Array [
      ".web.ts",
      ".web.tsx",
      ".web.mjs",
      ".web.js",
      ".web.jsx",
      ".ts",
      ".tsx",
      ".mjs",
      ".js",
      ".jsx",
      ".json",
      ".wasm",
    ],
    "mainFields": Array [
      "browser",
      "module",
      "main",
    ],
    "symlinks": false,
  },
  "stats": "detailed",
  "target": Array [
    "web",
  ],
  "watchOptions": Object {
    "aggregateTimeout": 5,
    "ignored": Array [
      "**/.git/**",
      "**/node_modules/**",
      "**/.expo/**",
      "**/.expo-shared/**",
      "**/web-build/**",
      "**/.#*",
    ],
  },
}
`;
