// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class-properties 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "\\"use strict\\";

function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, \\"string\\"); return typeof key === \\"symbol\\" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== \\"object\\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \\"default\\"); if (typeof res !== \\"object\\") return res; throw new TypeError(\\"@@toPrimitive must return a primitive value.\\"); } return (hint === \\"string\\" ? String : Number)(input); }
class Bork {
  constructor() {
    //Property initializer syntax
    _defineProperty(this, \\"instanceProperty\\", \\"bork\\");
    _defineProperty(this, \\"boundFunction\\", () => {
      return this.instanceProperty;
    });
  }
}
//Static class properties
_defineProperty(Bork, \\"staticProperty\\", \\"babelIsCool\\");
_defineProperty(Bork, \\"staticFunction\\", function () {
  return Bork.staticProperty;
});",
}
`;

exports[`nullish-coalescing 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "\\"use strict\\";

var _object$foo;
var foo = (_object$foo = object.foo) !== null && _object$foo !== void 0 ? _object$foo : \\"default\\";",
}
`;

exports[`optional-chaining 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "\\"use strict\\";

var _foo;
(_foo = foo) === null || _foo === void 0 ? void 0 : _foo.bar;",
}
`;

exports[`plugin-transform-modules-commonjs 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = void 0;
var _default = 42;
exports.default = _default;",
}
`;

exports[`preset-typescript 1`] = `
Object {
  Symbol(jest-snapshot-serializer-raw): "\\"use strict\\";

const x = 0;",
}
`;
