{"version":3,"file":"Colors.xml.js","sourceRoot":"","sources":["../../src/android/Colors.xml.ts"],"names":[],"mappings":";;;;;AAAA,gEAAuC;AACvC,gDAAwB;AAIxB,0DAK6B;AAE7B,MAAM,oBAAoB,GAAG,yBAAyB,CAAC;AACvD,MAAM,0BAA0B,GAAG,+BAA+B,CAAC;AAEnE,SAAS,uBAAuB,CAC9B,GAAY,EACZ,EACE,eAAe,EACf,wBAAwB,GAIzB;IAED,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,MAAM,MAAM,GAAG,mCAAgB,CAAC,GAAG,EAAE;QACnC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE;oBACR;wBACE,GAAG,EAAE,GAAG,EAAE;wBACV,OAAO,EAAE,+GAA+G;qBACzH;oBACD;wBACE,YAAY,EAAE,CAAC,eAAe;wBAC9B,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;wBACzC,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE;4BACV,IAAI,EAAE,yBAAyB;yBAChC;wBACD,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE;6BACjE;yBACF;qBACF;oBACD;wBACE,YAAY,EAAE,CAAC,wBAAwB;wBACvC,GAAG,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;wBAClD,IAAI,EAAE,OAAO;wBACb,UAAU,EAAE;4BACV,IAAI,EAAE,8BAA8B;yBACrC;wBACD,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,wBAAwB,CAAC,CAAC,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE;6BACnF;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;GAKG;AACH,SAAS,kBAAkB,CAAC,KAAY;IACtC,OAAO,sBAAW,CAAC,EAAE;SAClB,GAAG,CAAC,KAAK,CAAC;SACV,OAAO,CAAC,sCAAsC,EAAE,UAAU,CAAC;SAC3D,OAAO,CAAC,gCAAgC,EAAE,UAAU,CAAC,CAAC;AAC3D,CAAC;AAED;;GAEG;AACY,KAAK,UAAU,kBAAkB,CAC9C,eAAuB,EACvB,MAWC;;IAED,MAAM,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;IAC/C,MAAM,uBAAuB,SAAG,MAAM,CAAC,QAAQ,0CAAE,eAAe,CAAC;IACjE,MAAM,wBAAwB,SAAG,MAAM,CAAC,SAAS,0CAAE,eAAe,CAAC;IACnE,MAAM,gCAAgC,eAAG,MAAM,CAAC,QAAQ,0CAAE,SAAS,0CAAE,eAAe,CAAC;IAErF,IAAI,gCAAgC,IAAI,CAAC,wBAAwB,EAAE;QACjE,MAAM,IAAI,KAAK,CACb,yGAAyG,CAC1G,CAAC;KACH;IAED,MAAM,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC;IACrE,MAAM,YAAY,GAAG,cAAI,CAAC,OAAO,CAAC,eAAe,EAAE,0BAA0B,CAAC,CAAC;IAE/E,MAAM,UAAU,GAAG,MAAM,8BAAW,CAAC,QAAQ,CAAC,CAAC;IAC/C,MAAM,eAAe,GAAG,MAAM,8BAAW,CAAC,YAAY,CAAC,CAAC;IAExD,MAAM,oBAAoB,GAAG,uBAAuB,CAAC,UAAU,EAAE;QAC/D,eAAe;QACf,wBAAwB;KACzB,CAAC,CAAC;IAEH,MAAM,wBAAwB,GAAG,uBAAuB,CAAC,eAAe,EAAE;QACxE,eAAe,EAAE,uBAAuB;QACxC,wBAAwB,EAAE,gCAAgC;KAC3D,CAAC,CAAC;IAEH,MAAM,0DAAuC,CAAC,YAAY,EAAE,wBAAwB,EAAE;QACpF,iBAAiB,EAAE,IAAI;KACxB,CAAC,CAAC;IACH,MAAM,+BAAY,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;AACrD,CAAC;AA9CD,qCA8CC","sourcesContent":["import colorString from 'color-string';\nimport path from 'path';\nimport { Element } from 'xml-js';\n\nimport { Color } from '../SplashScreenConfig';\nimport {\n  readXmlFile,\n  writeXmlFile,\n  mergeXmlElements,\n  writeXmlFileOrRemoveFileUponNoResources,\n} from '../xml-manipulation';\n\nconst COLORS_XML_FILE_PATH = './res/values/colors.xml';\nconst COLORS_NIGHT_XML_FILE_PATH = './res/values-night/colors.xml';\n\nfunction ensureDesiredXmlContent(\n  xml: Element,\n  {\n    backgroundColor,\n    statusBarBackgroundColor,\n  }: {\n    backgroundColor?: Color;\n    statusBarBackgroundColor?: Color;\n  }\n): Element {\n  let idx = 0;\n  const result = mergeXmlElements(xml, {\n    elements: [\n      {\n        name: 'resources',\n        elements: [\n          {\n            idx: idx++,\n            comment: ` Below line is handled by '@expo/configure-splash-screen' command and it's discouraged to modify it manually `,\n          },\n          {\n            deletionFlag: !backgroundColor,\n            idx: !backgroundColor ? undefined : idx++,\n            name: 'color',\n            attributes: {\n              name: 'splashscreen_background',\n            },\n            elements: [\n              {\n                text: backgroundColor ? getAndroidStyleHex(backgroundColor) : '',\n              },\n            ],\n          },\n          {\n            deletionFlag: !statusBarBackgroundColor,\n            idx: !statusBarBackgroundColor ? undefined : idx++,\n            name: 'color',\n            attributes: {\n              name: 'splashscreen_statusbar_color',\n            },\n            elements: [\n              {\n                text: statusBarBackgroundColor ? getAndroidStyleHex(statusBarBackgroundColor) : '',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  });\n  return result;\n}\n\n/**\n * css-recognized hex is of format `#RRGGBB(AA)` or `#RGB(A)`, while Android accepts `#(AA)RRGGBB` or `#(A)RGB` (https://developer.android.com/guide/topics/resources/color-list-resource)\n * This function converts following formats:\n * - `#RRGGBBAA` ➡️ `#AARRGGBB`,\n * - `#RGBA` ➡️ `#ARGB`.\n */\nfunction getAndroidStyleHex(color: Color): string {\n  return colorString.to\n    .hex(color)\n    .replace(/^(#)([0-F]{2})([0-F]{4})([0-F]{2}$)/i, '$1$4$2$3')\n    .replace(/^(#)([0-F])([0-F]{2})([0-F])$/i, '$1$4$2$3');\n}\n\n/**\n * @param androidMainPath Path to the main directory containing code and resources in Android project. In general that would be `android/app/src/main`.\n */\nexport default async function configureColorsXml(\n  androidMainPath: string,\n  config: {\n    backgroundColor: Color;\n    statusBar?: {\n      backgroundColor?: Color;\n    };\n    darkMode?: {\n      backgroundColor?: Color;\n      statusBar?: {\n        backgroundColor?: Color;\n      };\n    };\n  }\n) {\n  const backgroundColor = config.backgroundColor;\n  const darkModeBackgroundColor = config.darkMode?.backgroundColor;\n  const statusBarBackgroundColor = config.statusBar?.backgroundColor;\n  const darkModeStatusBarBackgroundColor = config.darkMode?.statusBar?.backgroundColor;\n\n  if (darkModeStatusBarBackgroundColor && !statusBarBackgroundColor) {\n    throw new Error(\n      `'darkModeStatusBarBackgroundColor' is available only if 'statusBarBackgroundColor' is provided as well.`\n    );\n  }\n\n  const filePath = path.resolve(androidMainPath, COLORS_XML_FILE_PATH);\n  const darkFilePath = path.resolve(androidMainPath, COLORS_NIGHT_XML_FILE_PATH);\n\n  const xmlContent = await readXmlFile(filePath);\n  const darkFileContent = await readXmlFile(darkFilePath);\n\n  const configuredXmlContent = ensureDesiredXmlContent(xmlContent, {\n    backgroundColor,\n    statusBarBackgroundColor,\n  });\n\n  const configuredDarkXmlContent = ensureDesiredXmlContent(darkFileContent, {\n    backgroundColor: darkModeBackgroundColor,\n    statusBarBackgroundColor: darkModeStatusBarBackgroundColor,\n  });\n\n  await writeXmlFileOrRemoveFileUponNoResources(darkFilePath, configuredDarkXmlContent, {\n    disregardComments: true,\n  });\n  await writeXmlFile(filePath, configuredXmlContent);\n}\n"]}