{"version":3,"file":"pbxproj.js","sourceRoot":"","sources":["../../src/ios/pbxproj.ts"],"names":[],"mappings":";;;;;AAAA,+EAAyE;AACzE,gDAAwB;AACxB,kDAAmE;AAkBnE;;GAEG;AACY,KAAK,UAAU,cAAc,CAAC,eAAuB;IAClE,MAAM,MAAM,GAAG,gCAAa,CAAC,eAAe,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;IAE7D,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;KACrE;IAED,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;IAE3D,sDAAsD;IACtD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;QACzC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;KACxD;IACD,MAAM,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3F,MAAM,WAAW,GAAG,cAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAE/C,MAAM,UAAU,GAAG,eAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAE9C,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAC1B,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QACrB,IAAI,GAAG,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;SACjE;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CACH,CAAC;IAEF,MAAM,uBAAuB,GAAG,UAAU,CAAC,SAAS,CAAC,oCAAoC,CAAC,CAAC;IAC3F,IAAI,CAAC,uBAAuB,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;KACtF;IAED,IAAI,MAAM,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;QAC/D,MAAM,IAAI,KAAK,CACb,qDAAqD,WAAW,eAAe,uBAAuB,CAAC,MAAM,CAAC,IAAI,GAAG,CACtH,CAAC;KACH;IAED,OAAO;QACL,WAAW;QACX,WAAW;QACX,UAAU;QACV,uBAAuB;KACxB,CAAC;AACJ,CAAC;AA5CD,iCA4CC","sourcesContent":["import { projectConfig } from '@react-native-community/cli-platform-ios';\nimport path from 'path';\nimport xcode, { XcodeProject, UUID, PBXNativeTarget } from 'xcode';\n\nexport interface IosProject {\n  projectName: string;\n  /**\n   * Root path to directory containing project source files.\n   */\n  projectPath: string;\n  /**\n   * pbxProject reference that allows to modify `.pbxproj` file.\n   */\n  pbxProject: XcodeProject;\n  /**\n   * main application PBXNativeTarget from `.pbxproj` file.\n   */\n  applicationNativeTarget: { uuid: UUID; target: PBXNativeTarget };\n}\n\n/**\n * Reads iOS project and locates `.pbxproj` file for further parsing and modifications.\n */\nexport default async function readPbxProject(projectRootPath: string): Promise<IosProject> {\n  const config = projectConfig(projectRootPath, { plist: [] });\n\n  if (!config) {\n    throw new Error(`Couldn't find iOS project. Cannot configure iOS.`);\n  }\n\n  const { projectPath: xcodeProjPath, pbxprojPath } = config;\n\n  // xcodeProjPath contains path to .xcodeproj directory\n  if (!xcodeProjPath.endsWith('.xcodeproj')) {\n    throw new Error(`Couldn't find .xcodeproj directory.`);\n  }\n  const projectPath = xcodeProjPath.substring(0, xcodeProjPath.length - '.xcodeproj'.length);\n  const projectName = path.basename(projectPath);\n\n  const pbxProject = xcode.project(pbxprojPath);\n\n  await new Promise(resolve =>\n    pbxProject.parse(err => {\n      if (err) {\n        throw new Error(`.pbxproj file parsing issue: ${err.message}.`);\n      }\n      resolve();\n    })\n  );\n\n  const applicationNativeTarget = pbxProject.getTarget('com.apple.product-type.application');\n  if (!applicationNativeTarget) {\n    throw new Error(`Couldn't locate application PBXNativeTarget in '.xcodeproj' file.`);\n  }\n\n  if (String(applicationNativeTarget.target.name) !== projectName) {\n    throw new Error(\n      `Application native target name mismatch. Expected ${projectName}, but found ${applicationNativeTarget.target.name}.`\n    );\n  }\n\n  return {\n    projectName,\n    projectPath,\n    pbxProject,\n    applicationNativeTarget,\n  };\n}\n"]}